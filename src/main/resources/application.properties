spring.application.name=ExpressAction
server.port=8080
secret.token=secret_token
session.url=http://1.2.3.4:8080/api/v4/user/info
spring.datasource.url=jdbc:postgresql://localhost:5432/action
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
#spring.kafka.consumer.bootstrap-servers=1.2.3.4:9091, 1.2.3.4:9092, 1.2.3.4:9093
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.group-id=PROD291657
spring.kafka.consumer.properties.fetch.max.wait.s=172800
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.bootstrap-servers=1.2.3.4:9092, 1.2.3.4:9092, 1.2.3.4:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=PROD18051118
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="olimp" password="password";
logging.level.org.springframework=INFO
logging.file.name=logs/app.log
logging.file.max-size=20MB
logging.pattern.file=%d %p %c{1.} [%t] %m%n
logging.level.root=INFO